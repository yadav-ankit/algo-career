https://www.youtube.com/watch?v=e3bs0uA1NhQ
Fruit Into Baskets | 2 Pointers and Sliding Window


public int lengthOfLongestSubstringKDistinct(String s, int k) { 
    if (s == null || s.length() == 0 || k == 0) { 
        return 0; 
    } 

    Map<Character, Integer> charCounts = new HashMap<>(); 
    int i = 0, j = 0; 
    int maxLen = 0; 

    while (j < s.length()) { 
        char c = s.charAt(j); 
        charCounts.put(c, charCounts.getOrDefault(c, 0) + 1); 

        while (charCounts.size() > k) { 
            char leftChar = s.charAt(i); 
            int count = charCounts.get(leftChar); 
            
            if (count == 1) { 
              charCounts.remove(leftChar); 
            } else { 
                charCounts.put(leftChar, count - 1); 
            } 
            i++; 
        } 
        maxLen = Math.max(maxLen, j - i + 1); 
        j++; 
    } 
    return maxLen; 
} 
